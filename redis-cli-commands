//checking connection to redis server
127.0.0.1:6379> ping
PONG
127.0.0.1:6379> ping
PONG

//echo a string 
127.0.0.1:6379> ECHO 'hello world'
"hello world"

//quit command
127.0.0.1:6379> quit

//starting redis cli
C:\>redis-cli

//checking server connection
127.0.0.1:6379> ping
PONG

//setting a value
127.0.0.1:6379> SET foo 100
OK

//getting the set value
127.0.0.1:6379> GET FOO
(nil)
127.0.0.1:6379> GET foo
"100"

//setting a value to a string
127.0.0.1:6379> set bar "hello world"
OK

//getting the set string
127.0.0.1:6379> get bar
"hello world"

//increasing a value
127.0.0.1:6379> incr foo
(integer) 101

//decreasing a value
127.0.0.1:6379> decr foo
(integer) 100

//checking if a value exists
127.0.0.1:6379> exist foo
(error) ERR unknown command 'exist'
127.0.0.1:6379> exists foo
(integer) 1
127.0.0.1:6379> exists fool
(integer) 0
127.0.0.1:6379> del bar
(integer) 1
127.0.0.1:6379> exists bar
(integer) 0

//deleting everything
127.0.0.1:6379> flushall
OK
127.0.0.1:6379> get foo
(nil)
127.0.0.1:6379>  

//setting server name
127.0.0.1:6379> set server:name Evans
OK

//getting the server name
127.0.0.1:6379> get server:name
"Evans"

//setting server port
127.0.0.1:6379> set server:port 8000
OK

getting the server port
127.0.0.1:6379> get server:port
"8000"

//setting a string 
127.0.0.1:6379> set greeting "hello world"
OK
127.0.0.1:6379> get greeting
"hello world"


//setting a string to expire after a period of time
127.0.0.1:6379> expire greeting 50
(integer) 1

//checking time left to expire
127.0.0.1:6379> ttl greeting
(integer) 21
127.0.0.1:6379> ttl greeting
(integer) 18

//if time set expires it will output a negative
127.0.0.1:6379> ttl greeting
(integer) -2

//if time expires it will output a nil
127.0.0.1:6379> get greeting
(nil)
127.0.0.1:6379>

//////////////////////////////////////////////////////////////////////////////////////


//setting a string to expire in one command line
C:\>redis-cli
127.0.0.1:6379> setex greeting 30 "hello from redis"
OK
127.0.0.1:6379> ttl greeting
(integer) 21
127.0.0.1:6379> setex greeting 130 "hello its me again"
OK
127.0.0.1:6379> ttl greeting
(integer) 123

//setting a value to persist
127.0.0.1:6379> persist greeting
(integer) 1
127.0.0.1:6379> ttl greeting
(integer) -1
127.0.0.1:6379> get greeting
"hello its me again"

//setting multiple keys once 
127.0.0.1:6379> mset key1 "hello key1" key2 "hello key2"
OK
127.0.0.1:6379> get key1
"hello key1"
127.0.0.1:6379> get key2
"hello key2"

///append a key inside another key 
127.0.0.1:6379> append key1 " its me evans"
(integer) 23
127.0.0.1:6379> get key1
"hello key1 its me evans"
127.0.0.1:6379> rename key1 evans
OK
127.0.0.1:6379> get key1
(nil)
127.0.0.1:6379> get evans
"hello key1 its me evans"
127.0.0.1:6379>